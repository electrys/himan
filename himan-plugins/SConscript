#
# SConstruct for himan-plugins

Import('env')
import os
import sys

libcudart = '/opt/cuda/lib64/libcudart.so'

have_cuda = False

if os.path.isfile(libcudart):
	have_cuda = True


cppplugins = ['cache','fetcher','grib','neons','pcuda','querydata','writer','icing']

cudaplugins = ['tk2tc','tpot','vvms']

if have_cuda:
	env.Tool('cuda')

else:
	cppplugins.extend(cudaplugins)

for p in cppplugins:

	file = 'source/' + p + '.cpp'
	env.SharedLibrary(target = p, source = [file])

for p in cudaplugins:

	if not have_cuda:
		continue

	file = 'source/' + p + '.cpp'

	cufile = 'source/' + p + '_cuda.cu'
 
	files = [file, cufile]

	env.SharedLibrary(target = p, source = files)

